package DateStructor;
/*
    对于栈这种数据结构来说 是先进后出
    对于队列这种数据结构来说 是先进先出
    数组：查询快 增删慢 数组的地址是连续的 知道首地址就可以快速查找某一个元素
         数组的长度是固定的 想要增加/删除元素 就必须创建一个新数组  这就必须要把原来的数组复制过来然后再添加  在堆内存中需要来回的创建新的数组对象
    链表：查询慢 增删快 数据的地址不是连续的 链表中的每一个元素称为一个节点 一个节点包含了一个数据源（存储数组），两个指针域（存储地址）
         因此 每次查询都是从第一个开始 不论是查询第二个 还是查询倒数第一个 都是从第一个开始的
         1.单向链表 链表中只有一条链子，不能保证元素的顺序（存储元素和取出元素的顺序有可能不一致）
         2.双向链表 链表中有两条链子  有一条链子是专门记录元素的顺序的 是一个有序集合
 */
public class Stack {
}
