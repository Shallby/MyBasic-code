package Introduce;
/*
并发：两个或多个事件在同一时间段内发生   也就是交替进行 cpu这边做一下 那边算一下  这边吃一口 那边吃一口 效率慢 速度低
并行：多个任务在同一时刻内发生（同时发生） 同时执行 速度快 两个人吃两个馒头

进程：每个程序都有一个独立的内存空间，一个应用程序可以同时运行多个进程
     进程也是程序的一次执行过程  是系统运行程序的基本单位   系统运行一个程序就是从一个进程从创建 运行 到消亡的过程  但是一个程序也包括很多的进程 就是有很有多的进程
线程：线程是进程中的一个执行单元  负责当前进程中执行的执行，一个进程中至少有一个线程
        一个进程中是可以有很多线程的 这个程序也就称为多线程程序
多线程的好处：
    1.效率高
    2.多个线程之间互不影响

  一个程序运行之后 至少有一个进程 而一个进程里面又可以包含多个线程
  例如：360安全管家 都是多进程的程序 可以同时点击清理电脑 查杀木马  电脑加速 等等 这是不同点进程

CPU 中央处理器 对数据进行计算  就只会算 通过控制喂给cpu的数据 控制整个电脑的运行
    cpu的分类：AMD
             Inter i7 8866 四核八线程
                  八个线程：同时执行八个任务          腾讯电脑管家点击运行 就会进入到内存中，就是一个进程
                                                 点击功能：清理电脑 查杀木马  电脑加速 就会开启一条应用程序到CPU的执行路径
                                                         cpu就可以通过这个路径 计算 并执行相应的功能  这个路径就是线程
                                                         线程属于进程的 是进程中的一个执行单元 负责程序的执行
    对于一个单核 单线程的CPU
        CPU会在多个线程之间做高速的切换 这个切换的速度虽然很快 但是效率还是不够高
    对于一个四核八线程的CPU
        有八个线程 同时执行8个线程  8个线程在多个任务之间做高速的切换  速度是单线程cpu的8倍  也就是每个程序被执行到几率扩大了八倍
硬盘：永久存储ROM  保存着程序的文件 idea.exe
内存：零时存储RAM  所有程序都要进入到内存中运行
        点击一个应用程序 会将硬盘中的文件加载到内存中  进入到内存中的程序叫进程
        关掉了一个程序的所有进程 那这个程序也就消失了 因为内存中没有程序的进程 自然就关闭了一个应用程序

 */
public class ConcurrenceParallel {
}
