package Introduce;
/*
final修饰的类不可能有子类（太监类） 就是不能继承
格式：public final class 类名称{}
含义：当前类不可能有子类
注意：一个类如果是final的，那么他是无法被继承的，也就是其中所有的成员方法都无法进行覆盖重写 他也不能去重新指向一个新对象 但是只要
     这个类里面的一些局部变量 成员方法没有用final修饰 那么也是可以做一些修改的

final关键字修饰方法是，该方法同样也是不能覆盖重写 只一个最终的方法 但是如果这个类没有final 那么依旧是可以被继承的
    因此 abstract和final关键字是不能够一起修饰的  因为他们天生就是矛盾的 一个想被继承 一个不想被继承
final修饰一个局部变量 那么这个变量就不能进行修改
     一次赋值，终生不变 由于局部变量没有默认值 没有赋值  就是final int num；这一句仅仅是定义了一个 还是可以进行一次赋值
final修饰一个成员变量 这个变量也是不可修改的
     但是区别于局部变量，成员变量定义之后会马上有默认值，这个时候如果有final修饰 那么也是没有办法进行修改
     所以 对于成员变量 要么是通过成员方法set进行赋值  或者用final修饰的时候直接赋值；对于成员变量 用getset方法更香


 */
public class MyFinal {
    public static class FourPowerKeys {

    }
}
